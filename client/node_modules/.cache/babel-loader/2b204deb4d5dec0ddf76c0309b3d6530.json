{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\src\\\\pages\\\\shoppage\\\\ShopPage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/CollectionPage';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shopActions';\nimport { createStructuredSelector } from 'reselect';\nimport WithSpinner from '../../components/with-spinner/WithSpinner'; // const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/19012/Desktop/PortfolioProjects/crwn-clothing/src/pages/shoppage/ShopPage.jsx"],"names":["React","Route","CollectionsOverviewContainer","CollectionPage","connect","fetchCollectionsStartAsync","createStructuredSelector","WithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","selectIsCollectionsLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,8BAAzC;AAEA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,OAAOC,WAAP,MAAwB,2CAAxB,C,CAEA;AACA;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAsC;AAClCC,EAAAA,iBAAiB,GAAE;AAAA,UACRL,0BADQ,GACsB,KAAKM,KAD3B,CACRN,0BADQ;AAEfA,IAAAA,0BAA0B;AAC7B;;AAEDO,EAAAA,MAAM,GAAE;AAAA,wBACiC,KAAKD,KADtC;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,mBADV,eACUA,mBADV;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEb,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKW,KAAK,CAACE,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGJ,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACG;AAAvC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAdiC;;AAerC;AAED,MAAMK,eAAe,GAAGV,wBAAwB,CAAC;AAC7CQ,EAAAA,mBAAmB,EAAEG;AADwB,CAAD,CAAhD;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPage from '../collection/CollectionPage';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shopActions';\r\n\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\r\n\r\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n    componentDidMount(){\r\n        const {fetchCollectionsStartAsync} = this.props;\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    render(){\r\n        const {match, isCollectionsLoaded} = this.props;\r\n        return(    \r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} component={CollectionsOverviewContainer} />\r\n                <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props}/>}/>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionsLoaded: selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}