{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-in\\\\SignIn.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/FormInput';\nimport './SignIn.scss';\nimport CustomButton from '../custom-button/CustomButton';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/userActions';\nimport { connect } from 'react-redux';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Sign in with email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    handleChange: handleChange,\n    name: \"email\",\n    type: \"text\",\n    value: email,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: handleChange,\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/19012/Desktop/PortfolioProjects/crwn-clothing/client/src/components/sign-in/SignIn.jsx"],"names":["React","useState","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","email","password","userCredentials","setCredentials","handleSubmit","e","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,8BAAlD;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACF,EAAAA,gBAAD;AAAmBD,EAAAA;AAAnB,CAAD,KAA2C;AAAA,oBACZH,QAAQ,CAAC;AAACO,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAD,CADI;AAAA;AAAA,QAC/CC,eAD+C;AAAA,QAC9BC,cAD8B;;AAAA,QAG/CH,KAH+C,GAG5BE,eAH4B,CAG/CF,KAH+C;AAAA,QAGxCC,QAHwC,GAG5BC,eAH4B,CAGxCD,QAHwC;;AAKtD,QAAMG,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEAT,IAAAA,gBAAgB,CAACG,KAAD,EAAQC,QAAR,CAAhB;AACH,GAJD;;AAMA,QAAMM,YAAY,GAAIF,CAAD,IAAO;AAAA,sBACFA,CAAC,CAACG,MADA;AAAA,UACjBC,KADiB,aACjBA,KADiB;AAAA,UACVC,IADU,aACVA,IADU;AAExBP,IAAAA,cAAc,mBAAKD,eAAL;AAAsB,OAACQ,IAAD,GAAQD;AAA9B,OAAd;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,EAII;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEG,YAAzB;AAAuC,IAAA,IAAI,EAAC,OAA5C;AAAoD,IAAA,IAAI,EAAC,MAAzD;AAAgE,IAAA,KAAK,EAAEP,KAAvE;AAA8E,IAAA,KAAK,EAAC,OAApF;AAA4F,IAAA,QAAQ,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEO,YAAzB;AAAuC,IAAA,IAAI,EAAC,UAA5C;AAAuD,IAAA,IAAI,EAAC,UAA5D;AAAuE,IAAA,KAAK,EAAEN,QAA9E;AAAwF,IAAA,KAAK,EAAC,UAA9F;AAAyG,IAAA,QAAQ,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAEL,iBAArC;AAAwD,IAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CAJJ,CAJJ,CADJ;AAgBH,CAhCD;;AAkCA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,iBAAiB,EAAE,MAAMgB,QAAQ,CAAChB,iBAAiB,EAAlB,CADG;AAEpCC,EAAAA,gBAAgB,EAAE,CAACG,KAAD,EAAQC,QAAR,KAAqBW,QAAQ,CAACf,gBAAgB,CAAC;AAACG,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAFX,CAAL,CAAnC;;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAOa,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport FormInput from '../form-input/FormInput';\r\nimport './SignIn.scss';\r\nimport CustomButton from '../custom-button/CustomButton';\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/userActions';\r\nimport {connect} from 'react-redux';\r\n\r\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\r\n    const [userCredentials, setCredentials] = useState({email: '', password: ''});   \r\n\r\n    const {email, password} = userCredentials;\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        emailSignInStart(email, password);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const {value, name} = e.target;\r\n        setCredentials({...userCredentials, [name]: value});\r\n    }\r\n\r\n    return(\r\n        <div className=\"sign-in\">\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput handleChange={handleChange} name=\"email\" type=\"text\" value={email} label=\"email\" required/>\r\n                <FormInput handleChange={handleChange} name=\"password\" type=\"password\" value={password} label=\"password\" required/>\r\n\r\n                <div className=\"buttons\">\r\n                    <CustomButton type=\"submit\">Sign In</CustomButton>\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign In With Google</CustomButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}