{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\SignIn.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/FormInput';\nimport './SignIn.scss';\nimport CustomButton from '../custom-button/CustomButton';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/userActions';\nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Sign in with email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      handleChange: this.handleChange,\n      name: \"email\",\n      type: \"text\",\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      handleChange: this.handleChange,\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/19012/Desktop/PortfolioProjects/crwn-clothing/src/components/sign-in/SignIn.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","connect","SignIn","Component","constructor","handleSubmit","e","preventDefault","state","email","password","signInWithEmailAndPassword","setState","error","console","log","bind","handleChange","target","name","value","render","props","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormInput from '../form-input/FormInput';\r\nimport './SignIn.scss';\r\nimport CustomButton from '../custom-button/CustomButton';\r\nimport {auth, signInWithGoogle} from '../../firebase/firebase.utils';\r\nimport {googleSignInStart} from '../../redux/user/userActions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass SignIn extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const {email, password} = this.state;\r\n\r\n        try{\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            this.setState({\r\n                email: '',\r\n                password: ''\r\n            });\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const {googleSignInStart} = this.props;\r\n        return(\r\n            <div className=\"sign-in\">\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput handleChange={this.handleChange} name=\"email\" type=\"text\" value={this.state.email} label=\"email\" required/>\r\n                    <FormInput handleChange={this.handleChange} name=\"password\" type=\"password\" value={this.state.password} label=\"password\" required/>\r\n\r\n                    <div className=\"buttons\">\r\n                        <CustomButton type=\"submit\">Sign In</CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign In With Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}