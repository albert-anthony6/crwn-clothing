{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\src\\\\components\\\\header\\\\Header.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/crown.svg\";\nimport { auth } from '../../firebase/firebase.utils';\nimport './Header.scss';\nimport CartIcon from '../cart-icon/CartIcon';\nimport CartDropdown from '../cart-dropdown/CartDropdown';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartHidden } from '../../redux/cart/cartSelectors';\nimport { selectCurrentUser } from '../../redux/user/userSelectors';\nimport { selectBurgerBool } from '../../redux/burger/burgerSelectors';\nimport { toggleBurgerBool } from '../../redux/burger/burgerActions';\nimport { connect } from 'react-redux'; // ******************************************************\n\nconst Header = ({\n  currentUser,\n  hidden,\n  bool,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(Link, {\n  className: \"logo-container\",\n  onClick: bool ? dispatch(toggleBurgerBool()) : null,\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(Logo, {\n  className: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n})), React.createElement(\"input\", {\n  type: \"checkbox\",\n  checked: bool,\n  id: \"toggle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"options\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Link, {\n  className: \"option\",\n  onClick: dispatch(toggleBurgerBool()),\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"HOME\"), React.createElement(Link, {\n  className: \"option\",\n  onClick: dispatch(toggleBurgerBool()),\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"SHOP\"), React.createElement(Link, {\n  className: \"option\",\n  onClick: dispatch(toggleBurgerBool()),\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"CONTACT\"), currentUser ? React.createElement(\"div\", {\n  className: \"option\",\n  onClick: () => auth.signOut(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"SIGN OUT\") : React.createElement(Link, {\n  className: \"option\",\n  onClick: dispatch(toggleBurgerBool()),\n  to: \"/signin\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"SIGN IN\")), React.createElement(\"div\", {\n  onClick: bool ? dispatch(toggleBurgerBool()) : null,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(CartIcon, {\n  className: \"cart-icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})), React.createElement(\"label\", {\n  onClick: dispatch(toggleBurgerBool()),\n  htmlFor: \"toggle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"\\u2630\"), hidden ? null : React.createElement(CartDropdown, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}));\n\nconst mapDispatchToProps = dispatch => ({\n  toggleBool: bool => dispatch(toggleBurgerBool())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden,\n  bool: selectBurgerBool\n});\nexport default connect(mapStateToProps)(Header); // checked={`${hidden ? \"false\" : \"\"}`}","map":{"version":3,"sources":["C:/Users/19012/Desktop/PortfolioProjects/crwn-clothing/src/components/header/Header.jsx"],"names":["React","Link","auth","CartIcon","CartDropdown","createStructuredSelector","selectCartHidden","selectCurrentUser","selectBurgerBool","toggleBurgerBool","connect","Header","currentUser","hidden","bool","dispatch","signOut","mapDispatchToProps","toggleBool","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {ReactComponent as Logo} from \"../../assets/crown.svg\";\r\nimport {auth} from '../../firebase/firebase.utils';\r\nimport './Header.scss';\r\nimport CartIcon from '../cart-icon/CartIcon';\r\nimport CartDropdown from '../cart-dropdown/CartDropdown';\r\n\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {selectCartHidden} from '../../redux/cart/cartSelectors';\r\nimport {selectCurrentUser} from '../../redux/user/userSelectors';\r\nimport {selectBurgerBool} from '../../redux/burger/burgerSelectors';\r\n\r\nimport {toggleBurgerBool} from '../../redux/burger/burgerActions';\r\n\r\n\r\nimport {connect} from 'react-redux';\r\n\r\n// ******************************************************\r\n\r\nconst Header = ({currentUser, hidden, bool, dispatch}) => (\r\n            <div className=\"header\">\r\n                <Link className=\"logo-container\" onClick={bool ? dispatch(toggleBurgerBool()) : null} to=\"/\">\r\n                    <Logo className=\"logo\"/>\r\n                </Link>\r\n                <input type=\"checkbox\" checked={bool} id=\"toggle\"/>\r\n                <div className=\"options\">\r\n                    <Link className=\"option\" onClick={dispatch(toggleBurgerBool())} to=\"/\">\r\n                        HOME\r\n                    </Link>\r\n                    <Link className=\"option\" onClick={dispatch(toggleBurgerBool())} to=\"/shop\">\r\n                        SHOP\r\n                    </Link>\r\n\r\n                    <Link className=\"option\" onClick={dispatch(toggleBurgerBool())} to=\"/shop\">\r\n                        CONTACT\r\n                    </Link>\r\n                    {currentUser ? <div className=\"option\" onClick={() => auth.signOut()}>SIGN OUT</div> : <Link className=\"option\" onClick={dispatch(toggleBurgerBool())} to='/signin'>SIGN IN</Link>}\r\n                </div>\r\n                <div onClick={bool ? dispatch(toggleBurgerBool()) : null}>\r\n                    <CartIcon className=\"cart-icon\"/>\r\n                </div>\r\n                <label onClick={dispatch(toggleBurgerBool())} htmlFor=\"toggle\">&#9776;</label>\r\n                {\r\n                    hidden ? null : <CartDropdown/>   \r\n                }\r\n            </div>\r\n        );\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleBool: bool => dispatch(toggleBurgerBool())\r\n})\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser,\r\n    hidden: selectCartHidden,\r\n    bool: selectBurgerBool\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n\r\n// checked={`${hidden ? \"false\" : \"\"}`}"]},"metadata":{},"sourceType":"module"}