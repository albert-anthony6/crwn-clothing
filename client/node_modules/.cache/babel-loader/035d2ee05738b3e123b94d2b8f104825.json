{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\src\\\\pages\\\\shoppage\\\\ShopPage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionPage from '../collection/CollectionPage';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/19012/Desktop/PortfolioProjects/crwn-clothing/src/pages/shoppage/ShopPage.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","connect","updateCollections","firestore","convertCollectionsSnapshotToMap","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","constructor","unsubscribeFromSnapshot","state","loading","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,8BAAhC;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACN,mBAAD,CAAlD;AACA,MAAMQ,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,GAAE;AACT;AADS,SAObC,uBAPa,GAOa,IAPb;AAET,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAIDC,EAAAA,iBAAiB,GAAE;AAAA,UACRZ,iBADQ,GACa,KAAKa,KADlB,CACRb,iBADQ;AAEf,UAAMc,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACAjB,MAAAA,iBAAiB,CAACkB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJD;AAKH;;AAEDS,EAAAA,MAAM,GAAE;AAAA,UACGC,KADH,GACY,KAAKR,KADjB,CACGQ,KADH;AAAA,UAEGV,OAFH,GAEc,KAAKD,KAFnB,CAEGC,OAFH;AAGJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKU,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGT,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEF;AAA3C,SAAwDE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKQ,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGT,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEF;AAAtC,SAAmDE,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA9BiC;;AA+BrC;;AAED,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCxB,EAAAA,iBAAiB,EAAEkB,cAAc,IAAIM,QAAQ,CAACxB,iBAAiB,CAACkB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\r\nimport CollectionPage from '../collection/CollectionPage';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {updateCollections} from '../../redux/shop/shopActions';\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount(){\r\n        const {updateCollections} = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            updateCollections(collectionsMap);\r\n            this.setState({loading: false});\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const {match} = this.props;\r\n        const {loading} = this.state;\r\n        return(    \r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props}/>} />\r\n                <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props}/>}/>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}