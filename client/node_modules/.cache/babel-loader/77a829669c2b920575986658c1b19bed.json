{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './userTypes';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, emailSignInSuccess, emailSignInFailure } from './userActions';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/19012/Desktop/PortfolioProjects/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","googleSignInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";;;;;;AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AAEA,SAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,kBAAtC,EAA0DC,kBAA1D,QAAmF,eAAnF;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AAAA,iBACgB,MAAMP,IAAI,CAACQ,eAAL,CAAqBP,cAArB,CADtB;AAAA,UACQQ,IADR,QACQA,IADR;;AAEC,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACiB,mBAAmB;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG;AAAnB,OAA0BH,YAAY,CAACI,IAAb,EAA1B,EAApB,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMpB,GAAG,CAACqB,mBAAmB,CAACD,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAuD;AAC1D,MAAG;AAAA,kBACgB,MAAMrB,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADtB;AAAA,UACQZ,IADR,SACQA,IADR;;AAEC,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACS,kBAAkB;AAAES,MAAAA,EAAE,EAAEH,YAAY,CAACG;AAAnB,OAA0BH,YAAY,CAACI,IAAb,EAA1B,EAAnB,CAAT;AAEH,GAND,CAMC,OAAMC,KAAN,EAAY;AACT,UAAMpB,GAAG,CAACU,kBAAkB,CAACU,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUO,mBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,EAAuCjB,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUkB,kBAAV,GAA8B;AACjC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAqB;AACxB,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,EAA4BzB,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './userTypes';\r\n\r\nimport {auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase.utils';\r\n\r\nimport {signInSuccess, signInFailure, emailSignInSuccess, emailSignInFailure} from './userActions';\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}));\r\n    }catch(error){\r\n        yield put(googleSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email, password}}){\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}));\r\n\r\n    }catch(error){\r\n        yield put(emailSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\r\n}"]},"metadata":{},"sourceType":"module"}