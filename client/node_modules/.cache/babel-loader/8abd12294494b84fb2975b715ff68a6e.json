{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport BurgerActionTypes from './burgerTypes';\nconst INITIAL_STATE = {\n  bool: null\n};\n\nconst burgerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case BurgerActionTypes.TOGGLE_BURGER_BOOL:\n      return _objectSpread({}, state, {\n        bool: !state.bool\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default burgerReducer;","map":{"version":3,"sources":["C:/Users/19012/Desktop/PortfolioProjects/crwn-clothing/client/src/redux/burger/burgerReducer.js"],"names":["BurgerActionTypes","INITIAL_STATE","bool","burgerReducer","state","action","type","TOGGLE_BURGER_BOOL"],"mappings":";;;;;;AAAA,OAAOA,iBAAP,MAA8B,eAA9B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE;AADY,CAAtB;;AAIA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,iBAAiB,CAACO,kBAAvB;AACI,+BACOH,KADP;AAEIF,QAAAA,IAAI,EAAE,CAACE,KAAK,CAACF;AAFjB;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeD,aAAf","sourcesContent":["import BurgerActionTypes from './burgerTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    bool: null\r\n}\r\n\r\nconst burgerReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case BurgerActionTypes.TOGGLE_BURGER_BOOL:\r\n            return{\r\n                ...state,\r\n                bool: !state.bool\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default burgerReducer;"]},"metadata":{},"sourceType":"module"}