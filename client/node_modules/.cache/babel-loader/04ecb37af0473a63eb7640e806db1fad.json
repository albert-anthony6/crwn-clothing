{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore'; //for the database\n\nimport 'firebase/auth'; //for the auth\n\nconst config = {\n  apiKey: \"AIzaSyAnSTefBdGXT1morD30nCpWAoZNNm-Fb5U\",\n  authDomain: \"crown-db-9b186.firebaseapp.com\",\n  databaseURL: \"https://crown-db-9b186.firebaseio.com\",\n  projectId: \"crown-db-9b186\",\n  storageBucket: \"crown-db-9b186.appspot.com\",\n  messagingSenderId: \"151491606541\",\n  appId: \"1:151491606541:web:08694c8b930a7a066a7d44\",\n  measurementId: \"G-ZWW06DZFKF\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}; //THIS FUNCTION IS USED TO PULL DATA FROM SHOP.DATA COMPONENT AND CREATE NEW COLLECTION DOCUMENTS IN FIREBASE WITH EACH OBJECT\n// export const addCollectionAndDocuments = async (collectionKey, ObjectsToAdd) => {\n//   const collectionRef = firestore.collection(collectionKey);\n//   const batch = firestore.batch();\n//   ObjectsToAdd.forEach(obj => {\n//     const newDocRef = collectionRef.doc();\n//     batch.set(newDocRef, obj);\n//   });\n//   return await batch.commit();\n// };\n\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  console.log(transformedCollection);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/19012/Desktop/PortfolioProjects/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP,C,CAA6B;;AAC7B,OAAO,eAAP,C,CAAwB;;AAExB,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,WAAW,EAAE,uCAHF;AAIXC,EAAAA,SAAS,EAAE,gBAJA;AAKXC,EAAAA,aAAa,EAAE,4BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAAA,UACXC,WADW,GACWT,QADX,CACXS,WADW;AAAA,UACEC,KADF,GACWV,QADX,CACEU,KADF;AAElB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMV,OAAO,CAACW,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDV,cAJC,EAAN;AAMD,KAPD,CAOE,OAAMa,KAAN,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAvBM,C,CAyBP;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,OAAO,MAAMgB,+BAA+B,GAAIC,WAAD,IAAiB;AAC9D,QAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAqBlB,GAAG,IAAI;AAAA,sBACjCA,GAAG,CAACmB,IAAJ,EADiC;AAAA,UACjDC,KADiD,aACjDA,KADiD;AAAA,UAC1CC,KAD0C,aAC1CA,KAD0C;;AAGxD,WAAM;AACJC,MAAAA,SAAS,EAAEC,SAAS,CAACH,KAAK,CAACI,WAAN,EAAD,CADhB;AAEJC,MAAAA,EAAE,EAAEzB,GAAG,CAACyB,EAFJ;AAGJL,MAAAA,KAHI;AAIJC,MAAAA;AAJI,KAAN;AAMD,GAT6B,CAA9B;AAUAV,EAAAA,OAAO,CAACC,GAAR,CAAYI,qBAAZ;AACD,CAZM;AAcP/B,QAAQ,CAACyC,aAAT,CAAuBxC,MAAvB;AAEA,OAAO,MAAMyC,IAAI,GAAG1C,QAAQ,CAAC0C,IAAT,EAAb;AACP,OAAO,MAAM5B,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAM6B,QAAQ,GAAG,IAAI3C,QAAQ,CAAC0C,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe3C,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'; //for the database\r\nimport 'firebase/auth'; //for the auth\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAnSTefBdGXT1morD30nCpWAoZNNm-Fb5U\",\r\n    authDomain: \"crown-db-9b186.firebaseapp.com\",\r\n    databaseURL: \"https://crown-db-9b186.firebaseio.com\",\r\n    projectId: \"crown-db-9b186\",\r\n    storageBucket: \"crown-db-9b186.appspot.com\",\r\n    messagingSenderId: \"151491606541\",\r\n    appId: \"1:151491606541:web:08694c8b930a7a066a7d44\",\r\n    measurementId: \"G-ZWW06DZFKF\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if(!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n\r\n    if(!snapShot.exists){\r\n      const {displayName, email} = userAuth;\r\n      const createdAt = new Date();\r\n\r\n      try{\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n      } catch(error){\r\n        console.log('error creating user', error.message);\r\n      }\r\n    }\r\n\r\n    return userRef;\r\n  };\r\n\r\n  //THIS FUNCTION IS USED TO PULL DATA FROM SHOP.DATA COMPONENT AND CREATE NEW COLLECTION DOCUMENTS IN FIREBASE WITH EACH OBJECT\r\n  \r\n  // export const addCollectionAndDocuments = async (collectionKey, ObjectsToAdd) => {\r\n  //   const collectionRef = firestore.collection(collectionKey);\r\n    \r\n  //   const batch = firestore.batch();\r\n  //   ObjectsToAdd.forEach(obj => {\r\n  //     const newDocRef = collectionRef.doc();\r\n  //     batch.set(newDocRef, obj);\r\n  //   });\r\n\r\n  //   return await batch.commit();\r\n  // };\r\n\r\n  export const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedCollection = collections.docs.map(doc => {\r\n      const {title, items} = doc.data();\r\n\r\n      return{\r\n        routeName: encodeURI(title.toLowerCase()),\r\n        id: doc.id,\r\n        title,\r\n        items\r\n      }\r\n    });\r\n    console.log(transformedCollection);\r\n  }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account'});\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}