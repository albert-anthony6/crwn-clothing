{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\src\\\\components\\\\header\\\\Header.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/crown.svg\";\nimport { auth } from '../../firebase/firebase.utils';\nimport CartIcon from '../cart-icon/CartIcon';\nimport CartDropdown from '../cart-dropdown/CartDropdown';\nimport { HeaderContainer, LogoContainer, OptionsContainer, OptionDiv, OptionLink, CartIconStyles, LabelStyles, InputStyles } from './header.styles';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartHidden } from '../../redux/cart/cartSelectors';\nimport { selectCurrentUser } from '../../redux/user/userSelectors';\nimport { selectBurgerBool } from '../../redux/burger/burgerSelectors';\nimport { connect } from 'react-redux';\nimport { toggleBurgerBool } from '../../redux/burger/burgerActions';\n\nconst Header = ({\n  currentUser,\n  hidden,\n  bool,\n  dispatch\n}) => React.createElement(HeaderContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(LogoContainer, {\n  onClick: bool ? () => dispatch(toggleBurgerBool()) : null,\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(Logo, {\n  className: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n})), React.createElement(InputStyles, {\n  type: \"checkbox\",\n  checked: bool,\n  id: \"toggle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}), React.createElement(OptionsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(OptionLink, {\n  onClick: () => dispatch(toggleBurgerBool()),\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"HOME\"), React.createElement(OptionLink, {\n  onClick: () => dispatch(toggleBurgerBool()),\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"SHOP\"), React.createElement(OptionLink, {\n  onClick: () => dispatch(toggleBurgerBool()),\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"CONTACT\"), currentUser ? React.createElement(OptionDiv, {\n  onClick: () => auth.signOut(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"SIGN OUT\") : React.createElement(OptionLink, {\n  onClick: () => dispatch(toggleBurgerBool()),\n  to: \"/signin\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"SIGN IN\")), React.createElement(\"div\", {\n  onClick: bool ? () => dispatch(toggleBurgerBool()) : null,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \"const CartIcon = (\", className, \") => (\", React.createElement(\"div\", {\n  className: className,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"svg\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"...\")), \")\"), React.createElement(LabelStyles, {\n  onClick: () => dispatch(toggleBurgerBool()),\n  htmlFor: \"toggle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"\\u2630\"), hidden ? null : React.createElement(CartDropdown, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}));\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden,\n  bool: selectBurgerBool\n});\nexport default connect(mapStateToProps)(Header); // checked={`${hidden ? \"false\" : \"\"}`}","map":{"version":3,"sources":["C:/Users/19012/Desktop/PortfolioProjects/crwn-clothing/src/components/header/Header.jsx"],"names":["React","Link","auth","CartIcon","CartDropdown","HeaderContainer","LogoContainer","OptionsContainer","OptionDiv","OptionLink","CartIconStyles","LabelStyles","InputStyles","createStructuredSelector","selectCartHidden","selectCurrentUser","selectBurgerBool","connect","toggleBurgerBool","Header","currentUser","hidden","bool","dispatch","signOut","className","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {ReactComponent as Logo} from \"../../assets/crown.svg\";\r\nimport {auth} from '../../firebase/firebase.utils';\r\nimport CartIcon from '../cart-icon/CartIcon';\r\nimport CartDropdown from '../cart-dropdown/CartDropdown';\r\n\r\nimport {HeaderContainer, LogoContainer, OptionsContainer, OptionDiv, OptionLink, CartIconStyles, LabelStyles, InputStyles} from './header.styles';\r\n\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {selectCartHidden} from '../../redux/cart/cartSelectors';\r\nimport {selectCurrentUser} from '../../redux/user/userSelectors';\r\nimport {selectBurgerBool} from '../../redux/burger/burgerSelectors';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { toggleBurgerBool } from '../../redux/burger/burgerActions';\r\n\r\nconst Header = ({currentUser, hidden, bool, dispatch}) => (\r\n    <HeaderContainer>\r\n        <LogoContainer onClick={bool ? () => dispatch(toggleBurgerBool()) : null} to=\"/\">\r\n            <Logo className=\"logo\"/>\r\n        </LogoContainer>\r\n        <InputStyles type=\"checkbox\" checked={bool} id=\"toggle\"/>\r\n        <OptionsContainer>\r\n            <OptionLink onClick={() => dispatch(toggleBurgerBool())} to=\"/\">\r\n                HOME\r\n            </OptionLink>\r\n            <OptionLink onClick={() => dispatch(toggleBurgerBool())} to=\"/shop\">\r\n                SHOP\r\n            </OptionLink>\r\n\r\n            <OptionLink onClick={() => dispatch(toggleBurgerBool())} to=\"/shop\">\r\n                CONTACT\r\n            </OptionLink>\r\n            {currentUser ? <OptionDiv onClick={() => auth.signOut()}>SIGN OUT</OptionDiv> : <OptionLink onClick={() => dispatch(toggleBurgerBool())} to='/signin'>SIGN IN</OptionLink>}\r\n        </OptionsContainer>\r\n        <div onClick={bool ? () => dispatch(toggleBurgerBool()) : null}>\r\n        const CartIcon = ({ className }) => (\r\n  <div className={className}>\r\n    <svg>...</svg>\r\n  </div>\r\n)\r\n        </div>\r\n        <LabelStyles onClick={() => dispatch(toggleBurgerBool())} htmlFor=\"toggle\">&#9776;</LabelStyles>\r\n        {\r\n            hidden ? null : <CartDropdown/>   \r\n        }\r\n    </HeaderContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser,\r\n    hidden: selectCartHidden,\r\n    bool: selectBurgerBool\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n\r\n// checked={`${hidden ? \"false\" : \"\"}`}"]},"metadata":{},"sourceType":"module"}