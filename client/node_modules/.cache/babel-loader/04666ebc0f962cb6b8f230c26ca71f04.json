{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19012\\\\Desktop\\\\PortfolioProjects\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\SignUp.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\nimport { signUpStart } from '../../redux/user/userActions';\nimport { connect } from 'react-redux';\nimport './SignUp.scss';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"Passswords don't match\");\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"I do not have a account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/19012/Desktop/PortfolioProjects/crwn-clothing/src/components/sign-up/SignUp.jsx"],"names":["React","FormInput","CustomButton","signUpStart","connect","SignUp","Component","constructor","handleSubmit","e","preventDefault","props","state","displayName","email","password","confirmPassword","alert","handleChange","setState","target","name","value","bind","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport FormInput from '../form-input/FormInput';\r\nimport CustomButton from '../custom-button/CustomButton';\r\n\r\nimport {signUpStart} from '../../redux/user/userActions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './SignUp.scss';\r\n\r\nclass SignUp extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {signUpStart} = this.props;\r\n        const {displayName, email, password, confirmPassword} = this.state;\r\n\r\n        if(password !== confirmPassword){\r\n            alert(\"Passswords don't match\");\r\n            return;\r\n        }\r\n        signUpStart({displayName, email, password});\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const {displayName, email, password, confirmPassword} = this.state;\r\n        return(\r\n            <div className=\"sign-up\">\r\n                <h2 className=\"title\">I do not have a account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n                    <FormInput type=\"text\" name=\"displayName\" value={displayName} onChange={this.handleChange} label=\"Display Name\" required/>\r\n                    <FormInput type=\"email\" name=\"email\" value={email} onChange={this.handleChange} label=\"Email\" required/>\r\n                    <FormInput type=\"password\" name=\"password\" value={password} onChange={this.handleChange} label=\"Password\" required/>\r\n                    <FormInput type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={this.handleChange} label=\"Confirm Password\" required/>\r\n                    <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}